/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fermedesktop.productos;

import controlador.ControladorFamiliaProducto;
import controlador.ControladorTipoProducto;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.FamiliaProducto;
import modelo.TipoProducto;

/**
 * Formulario para los Tipos de Productos de cada familia del sistema.
 * @author Ricardo Carcassón
 */
public class frmTipoProductos extends javax.swing.JInternalFrame {

    /**
     * Creates new form frmTipoProductos
     */
    ArrayList<FamiliaProducto> listaFamilias;
    Hashtable tablaFamilias = new Hashtable();
    int idFamilia = 0;
    int TotalTipos = 0;
    public frmTipoProductos() {
        initComponents();
        CargarFamilias();
        String famDescripcion = (String)jCmbFamilias.getSelectedItem();
        idFamilia = (int)tablaFamilias.get(famDescripcion);
        CargarTipos(idFamilia);
    }
    
    /**
     * Método que carga las familias del sistema en un Combobox para su selección al momento de crear o visualizar tipos. Paralelamente
     * se carga un HashTable con la información de los IDs de cada familia respectivamente.
     */
    private void CargarFamilias(){
        ControladorFamiliaProducto ctrlFP = new ControladorFamiliaProducto();
        listaFamilias = ctrlFP.ObtenerFamilias();
        for (int i = 0; i<listaFamilias.size(); i++){
            jCmbFamilias.addItem(listaFamilias.get(i).getDescripcion());
            tablaFamilias.put(listaFamilias.get(i).getDescripcion(), listaFamilias.get(i).getId());
        }
    }
    
    /**
     * Tranforma el id de la secuencia de cada tipo en el formato requerido de tres dígitos
     * @param secuencia id a transformar
     * @return Secuencia transformada en el formato de 3 dígitos.
     */
    private String TransformarSecuencia(int secuencia){
        if (secuencia>=1 && secuencia<=9){
            return "00"+secuencia;
        }else if (secuencia>=10 && secuencia<=99){
            return "0"+secuencia;
        }else{
            return "" + secuencia;
        }
    }
    
    /**
     * Este método carga los tipos de productos dependiendo de la familia seleccionada desde el ComboBox en el jTable del formulario.
     * Junto con lo anterior el método prepará el siguiente ID disponible en caso de agregar un nuevo tipo. También se fuerza el ancho mínimo y máximo de la columna ID
     * para no ser visible al usuario.
     * @param id Parametro obtenido del Hashtable de la Familia de Productos.
     */
    private void CargarTipos(int id){
        TotalTipos = 0;
        DefaultTableModel modelo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        modelo.setColumnIdentifiers(getColumnas());
        ControladorTipoProducto ctrTP = new ControladorTipoProducto();
        ArrayList<TipoProducto> listatipos = ctrTP.ObtenerTiposPorID(id);
        for (int i=0; i<listatipos.size();i++){
            modelo.addRow(new Object[]{listatipos.get(i).getId(),TransformarSecuencia(listatipos.get(i).getSecuencia()),listatipos.get(i).getDescripcion()});
            TotalTipos++;
        }
        jTablaTipos.setModel(modelo);
        jTablaTipos.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        jTablaTipos.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        jTablaTipos.getColumn("ID").setMaxWidth(0);
        jTablaTipos.getColumn("ID").setMinWidth(0);
        jTablaTipos.getColumn("ID").setPreferredWidth(0);
        
    }
    
    /**
     * Método que especifica los identificadores de columnas del jTable
     * @return El Array con los identificadores
     */
    private String[] getColumnas(){
        String[] columnas = new String[]{"ID","Código Secuencia","Descripción"};
        return columnas;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jCmbFamilias = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablaTipos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnAyuda = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setTitle("Tipo de Productos");
        setFrameIcon(null);

        jLabel1.setText("Seleccione una familia de producto para desplegar todos los tipos asociados a dicha familia.");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Familia:");

        jCmbFamilias.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCmbFamiliasItemStateChanged(evt);
            }
        });
        jCmbFamilias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbFamiliasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCmbFamilias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCmbFamilias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTablaTipos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTablaTipos);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Descripción:");

        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyTyped(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.setToolTipText("");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGuardar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setText("Para agregar un nuevo Tipo seleccione la Familia y complete la Descripción en la parte inferior:");
        jLabel4.setToolTipText("");

        btnAyuda.setText("Ayuda");

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAyuda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAyuda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCmbFamiliasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbFamiliasActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCmbFamiliasActionPerformed

    private void jCmbFamiliasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCmbFamiliasItemStateChanged
        // TODO add your handling code here:
        if (!tablaFamilias.isEmpty()){
            String famDescripcion = (String)jCmbFamilias.getSelectedItem();
            idFamilia = (int)tablaFamilias.get(famDescripcion);
            CargarTipos(idFamilia);            
        }        
    }//GEN-LAST:event_jCmbFamiliasItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if (txtDescripcion.getText().length()>0){
            int confirmar = JOptionPane.showConfirmDialog(null, "¿Está seguro de guardar la descripción en la familia seleccionada?","Confirmar guardado",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
            if (JOptionPane.YES_NO_OPTION==confirmar){
                TipoProducto tp = new TipoProducto();
                tp.setSecuencia(TotalTipos+1);
                tp.setDescripcion(txtDescripcion.getText());
                tp.setFamilia_producto_id(idFamilia);
                ControladorTipoProducto ctrlTP = new ControladorTipoProducto();
                if(ctrlTP.Agregar(tp)){
                    txtDescripcion.setText("");
                    String famDescripcion = (String)jCmbFamilias.getSelectedItem();
                    idFamilia = (int)tablaFamilias.get(famDescripcion);
                    CargarTipos(idFamilia);
                    txtDescripcion.requestFocus();
                }else{
                    JOptionPane.showMessageDialog(null, "Ocurrio un error al guardar el nuevo tipo", "Error", JOptionPane.OK_OPTION);
                    txtDescripcion.requestFocus();
                    txtDescripcion.selectAll();
                }
            }else{
                txtDescripcion.requestFocus();
                txtDescripcion.selectAll();
            }
        }else{
            JOptionPane.showMessageDialog(null, "Debe ingresar una descripción válida para poder guardar en la familia seleccionada.","Error",JOptionPane.OK_OPTION);
            txtDescripcion.requestFocus();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyTyped
        // TODO add your handling code here:
        if (txtDescripcion.getText().length()==50){
            evt.consume();
        }
    }//GEN-LAST:event_txtDescripcionKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAyuda;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jCmbFamilias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablaTipos;
    private javax.swing.JTextField txtDescripcion;
    // End of variables declaration//GEN-END:variables

}
